package com.yahala.SQLite;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;

import de.greenrobot.dao.AbstractDaoMaster;
import de.greenrobot.dao.identityscope.IdentityScopeType;

import com.yahala.SQLite.UserSettingDao;
import com.yahala.SQLite.MessagesDao;
import com.yahala.SQLite.ContactsDao;
import com.yahala.SQLite.ChatsDao;
import com.yahala.SQLite.ChatSettingsDao;
import com.yahala.SQLite.WallpapersDao;
import com.yahala.SQLite.GroupsDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * Master of DAO (schema version 2): knows all DAOs.
 */
public class DaoMaster extends AbstractDaoMaster {
    public static final int SCHEMA_VERSION = 2;

    /**
     * Creates underlying database table using DAOs.
     */
    public static void createAllTables(SQLiteDatabase db, boolean ifNotExists) {
        UserSettingDao.createTable(db, ifNotExists);
        MessagesDao.createTable(db, ifNotExists);
        ContactsDao.createTable(db, ifNotExists);
        ChatsDao.createTable(db, ifNotExists);
        ChatSettingsDao.createTable(db, ifNotExists);
        WallpapersDao.createTable(db, ifNotExists);
        GroupsDao.createTable(db, ifNotExists);
    }

    /**
     * Drops underlying database table using DAOs.
     */
    public static void dropAllTables(SQLiteDatabase db, boolean ifExists) {
        UserSettingDao.dropTable(db, ifExists);
        MessagesDao.dropTable(db, ifExists);
        ContactsDao.dropTable(db, ifExists);
        ChatsDao.dropTable(db, ifExists);
        ChatSettingsDao.dropTable(db, ifExists);
        WallpapersDao.dropTable(db, ifExists);
        GroupsDao.dropTable(db, ifExists);
    }

    public static abstract class OpenHelper extends SQLiteOpenHelper {

        public OpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory, SCHEMA_VERSION);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            Log.i("greenDAO", "Creating tables for schema version " + SCHEMA_VERSION);
            createAllTables(db, false);
        }
    }

    /**
     * WARNING: Drops all table on Upgrade! Use only during development.
     */
    public static class DevOpenHelper extends OpenHelper {
        public DevOpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory);
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            Log.i("greenDAO", "Upgrading schema from version " + oldVersion + " to " + newVersion + " by dropping all tables");
            dropAllTables(db, false);
            onCreate(db);
        }
    }

    public DaoMaster(SQLiteDatabase db) {
        super(db, SCHEMA_VERSION);
        registerDaoClass(UserSettingDao.class);
        registerDaoClass(MessagesDao.class);
        registerDaoClass(ContactsDao.class);
        registerDaoClass(ChatsDao.class);
        registerDaoClass(ChatSettingsDao.class);
        registerDaoClass(WallpapersDao.class);
        registerDaoClass(GroupsDao.class);
    }

    public DaoSession newSession() {
        return new DaoSession(db, IdentityScopeType.Session, daoConfigMap);
    }

    public DaoSession newSession(IdentityScopeType type) {
        return new DaoSession(db, type, daoConfigMap);
    }

}
